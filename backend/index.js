"use strict";
const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");
const { webSocket } = require("./socketIo");
const cookieParser = require("cookie-parser");
const csrf = require("csurf");
const path = require("path");
require("dotenv").config();
require("./utils/connectdb");
const csrfProtection = csrf({ cookie: true });
const parsForm = bodyParser.urlencoded({ extended: true });
const app = express();
///Add the client URL to the CORS policy

const whitelist = process.env.WHITELISTED_DOMAINS
  ? process.env.WHITELISTED_DOMAINS.split(",")
  : [];
const corsOptions = {
  origin: function (origin, callback) {
    if (!origin || whitelist.indexOf(origin) !== -1) {
      callback(null, true);
    } else {
      callback(new Error("Not allowed by CORS"));
    }
  },

  credentials: true,
};

app.use(cors(corsOptions));
// ***********************************************************
//  This is Brotli integration with express
//  brotli is compressed file whitch is almost supported by all browser
//  but it is needed to set the encoding on html request header to make it works
//  this file is generated by webpack 
//  you need it only for production
// ***********************************************************

// app.get("*.js",(req,res,next)=>{
//   if(req.header("Accept-Encoding").includes("br")){
//     req.url=req.url + ".br"
//     console.log(req.header("Accept-Encoding"))
//     res.set("Content-Encoding","br")
//     res.set("Content-Type","application/javascript; charset=UTF-8")
//   }
//   next()
// })

// basic root for production
//app.use(express.static(path.join(__dirname, "public")));

app.use(parsForm);
app.use(cookieParser(process.env.COOKIE_SECRET));
app.use(csrfProtection);
app.use(bodyParser.json());
app.use(express.json());

//csurf
app.use((req, res, next) => {
  res.cookie("_sfgzf_", req.csrfToken());
  next();
});

app.use((err, req, res, next) => {
  if (err.code === "EBADCSRFTOKEN") {
    res.status(403);
    res.send({ fatalError: "csrf attack detected" });
  }
});
//socket io
var server = require("http").Server(app);
const io = require("socket.io")(server, {
  cors: {
    origin: "*",
  },
});

webSocket(io);

//app root
const userRouter = require("./routes/userRoutes");
const authRouter = require("./routes/authRoutes");
const uploadRouter = require("./routes/uploadRoutes");
const conversationRouter = require("./routes/conversationRoutes");
const inboxRouter = require("./routes/inboxRoutes");

app.use("/auth", authRouter);
app.use("/users", userRouter);
app.use("/conversation", conversationRouter);
app.use("/inbox", inboxRouter);
app.use("/upload", uploadRouter);

// basic root for production
// app.get("/*", (req, res) => {
//   res.sendFile(
//     "index.html",
//     { root: path.join(__dirname, "public") },
//     (err) => {
//       if (err) {
//         console.log(err);
//       } else {
//         console.log("success");
//       }
//     }
//   );
// });
///Start the server in port 5000
const port = process.env.PORT;
module.exports = server.listen(port, function () {
  //server.emit("app_started")
  console.log("App started at port:", port);
});
